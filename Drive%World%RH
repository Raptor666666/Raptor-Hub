warn("Anti afk running")
game:GetService("Players").LocalPlayer.Idled:connect(function()
warn("Anti afk ran")
game:GetService("VirtualUser"):CaptureController()
game:GetService("VirtualUser"):ClickButton2(Vector2.new())
end)

local l = loadstring(game:HttpGet("https://raw.githubusercontent.com/laagginq/ui-libraries/main/dxhooknotify/src.lua", true))()
l:Notify("Checking","Verifying if you are whitelisted",3)

local l = loadstring(game:HttpGet("https://raw.githubusercontent.com/laagginq/ui-libraries/main/dxhooknotify/src.lua", true))()
l:Notify("Whitelisted","Loading Script enjoy!",2)

local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/laagginq/ui-libraries/main/ven/src.lua"))()
local window = Library:Window("ðŸ¦–RaptorHub/Drive WorldðŸš—")
local tab1 = window:Tab("AutoFarm")
local tab2 = window:Tab("Races")
local tab3 = window:Tab("Credits")

tab1:Toggle("AutoFarm [Drive]",function(state)
    getfenv().drive = (state and true or false)
    while getfenv().drive do
       local plr = game.Players.LocalPlayer
    local chr = plr.Character
    local car = chr.Humanoid.SeatPart.Parent.Parent
    local carp = car.PrimaryPart
       if  getfenv().new == nil then
          local drivebypasspart = Instance.new("Part",workspace)
          drivebypasspart.Position = chr.HumanoidRootPart.Position+Vector3.new(2500,5000,2500)
          drivebypasspart.Size = Vector3.new(10000,10,10000)
          drivebypasspart.Anchored = true
          car:PivotTo(drivebypasspart.CFrame+Vector3.new(0,10,0))
          wait(1)
           getfenv().new = Instance.new("Part",workspace)
           getfenv().new.Position = chr.HumanoidRootPart.Position+Vector3.new(0,5000,0)
           getfenv().new.Anchored = true
           getfenv().new.Size = Vector3.new(10000,10,10000)
          end
          
    local plr = game.Players.LocalPlayer
    local chr = plr.Character
    local car = chr.Humanoid.SeatPart.Parent.Parent
    local carp = car.PrimaryPart
    car:PivotTo(getfenv().new.CFrame+Vector3.new(0,10,0))
    task.wait(0.5)
    carp.AssemblyLinearVelocity = carp.CFrame.LookVector*600
    end  
end)

tab1:Toggle("AutoFarm [Air]",function(state)
    getfenv().air = (state and true or false)
    while getfenv().air do
       while getfenv().air do
          local plr = game.Players.LocalPlayer
       local chr = plr.Character
       local car = chr.Humanoid.SeatPart.Parent.Parent
       local carp = car.PrimaryPart
          if not getfenv().new then
             local drivebypasspart = Instance.new("Part",workspace)
             drivebypasspart.Position = chr.HumanoidRootPart.Position+Vector3.new(2500,5000,2500)
             drivebypasspart.Size = Vector3.new(10000,10,10000)
             drivebypasspart.Anchored = true
             car:PivotTo(drivebypasspart.CFrame+Vector3.new(0,10,0))
             wait(1)
             getfenv().new = Instance.new("Part",workspace)
             getfenv().new.Position = chr.HumanoidRootPart.Position+Vector3.new(0,5000,0)
             getfenv().new.Anchored = true
             getfenv().new.Size = Vector3.new(10000,10,10000)
             end
             local plr = game.Players.LocalPlayer
             local chr = plr.Character
             local car = chr.Humanoid.SeatPart.Parent.Parent
             local carp = car.PrimaryPart
             car:PivotTo(getfenv().new.CFrame*CFrame.new(0,15,500))
             carp.Velocity=carp.CFrame.LookVector*700
             carp.Velocity = carp.Velocity+Vector3.new(0,100,0)
             task.wait(2)
             pcall(function()
                local text = game:GetService("Players").LocalPlayer.PlayerGui.Score.Frame.Score.TotalScore.Text:split("$")
             local text2 = text[2]:split("<")
             local text3 = string.gsub(text2[1],",","")
             local num = tonumber(text3)
             if num > 60000 then
                game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored = true
             repeat wait()
                local text = game:GetService("Players").LocalPlayer.PlayerGui.Score.Frame.Score.TotalScore.Text:split("$")
                local text2 = text[2]:split("<")
             local text3 = string.gsub(text2[1],",","")
             local num = tonumber(text3)
             print(num)
             until num == 0 or getfenv().autodrift == false
             game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored = false
             end
                end)
             end
         
    end   
end)

tab1:Toggle("AutoFarm [Drift]",function(state)
    getfenv().autodrift = (state and true or false)
    while getfenv().autodrift do
       task.wait()
    local plr = game.Players.LocalPlayer
    local chr = plr.Character
    local car = chr.Humanoid.SeatPart.Parent.Parent
    local carp = car.PrimaryPart
    if not getfenv().new then
       local drivebypasspart = Instance.new("Part",workspace)
             drivebypasspart.Position = chr.HumanoidRootPart.Position+Vector3.new(2500,5000,2500)
             drivebypasspart.Size = Vector3.new(10000,10,10000)
             drivebypasspart.Anchored = true
             car:PivotTo(drivebypasspart.CFrame+Vector3.new(0,10,0))
       wait(1)
       getfenv().new = Instance.new("Part",workspace)
       getfenv().new.Position = chr.HumanoidRootPart.Position+Vector3.new(0,5000,0)
       getfenv().new.Anchored = true
       getfenv().new.Size = Vector3.new(10000,10,10000)
    end
       pcall(function()
       local text = game:GetService("Players").LocalPlayer.PlayerGui.Score.Frame.Score.TotalScore.Text:split("$")
    local text2 = text[2]:split("<")
    local text3 = string.gsub(text2[1],",","")
    local num = tonumber(text3)
    if num > 60000 then
       game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored = true
    repeat wait()
       local text = game:GetService("Players").LocalPlayer.PlayerGui.Score.Frame.Score.TotalScore.Text:split("$")
       local text2 = text[2]:split("<")
    local text3 = string.gsub(text2[1],",","")
    local num = tonumber(text3)
    print(num)
    until num == 0 or getfenv().autodrift == false
    game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored = false
    end
       end)
    if type(num) == "number" then
       val = num
    end
    car:PivotTo(getfenv().new.CFrame+Vector3.new(0,5,0))
    getfenv().new.Velocity = chr.HumanoidRootPart.CFrame.LookVector*1500
    task.wait(0.01)
    end    
end)

tab2:Toggle("AutoFarm [Race XP]",function(state)
    getfenv().xprace = (state and true or false)
    local function getrace()
       local plr = game.Players.LocalPlayer
       local data = game:GetService("ReplicatedStorage").PlayerData[plr.Name]
       local race = nil
       for i,v in pairs(data.Tasks.Challenges.List:GetChildren()) do
       if v.ClassName == "Folder" and v:GetAttribute("AvailableTime") ~= nil and v:GetAttribute("AvailableTime")-workspace:GetServerTimeNow() <= 0 and v:GetAttribute("ExpireTime")-workspace:GetServerTimeNow() > 0 then
          local time = v:GetAttribute("AvailableTime")-workspace:GetServerTimeNow()
       local expire = v:GetAttribute("ExpireTime")-workspace:GetServerTimeNow()
       race = v.Name
       end
       end
       return race
       end
    spawn(function()
 while getfenv().xprace do
 task.wait()
 if game:GetService("Players").LocalPlayer.PlayerGui.Score.Frame.Race.Visible == true and getfenv().lookat ~= nil then
 local speed = getfenv().speed or 250
 
 local plr = game.Players.LocalPlayer
 local chr = plr.Character
 local car = chr.Humanoid.SeatPart.Parent.Parent
 local carp = car.PrimaryPart
 carp.Velocity = getfenv().lookat.CFrame.LookVector*speed
 end
 end
    end)
    while getfenv().xprace do
       wait()
 game:GetService("ReplicatedStorage").Systems.Races.StartTaskChallengeRace:FireServer("GoldRushCrown")
  repeat wait()
    until game:GetService("Players").LocalPlayer.PlayerGui.Score.Frame.Race.Visible == true or getfenv().xprace == false
    local plr = game.Players.LocalPlayer
    local chr = plr.Character
    local car = chr.Humanoid.SeatPart.Parent.Parent
    local carp = car.PrimaryPart
    repeat task.wait()
       local test = nil
       for i,v in pairs(workspace.Races:GetDescendants()) do
          if v.ClassName == "Model"  and v:FindFirstChild("Forcefield") and v:FindFirstChild("Forcefield").Transparency ~= 1  then
             local speed = getfenv().speed or 250
             getfenv().lookat = v:FindFirstChild("Forcefield")
             local plr = game.Players.LocalPlayer
             local chr = plr.Character
             local car = chr.Humanoid.SeatPart.Parent.Parent
             local carp = car.PrimaryPart
             local location = v:FindFirstChild("Forcefield").Position
             local dist = (carp.Position-location).magnitude
             print(dist/speed)
             local TweenService = game:GetService("TweenService")
             local TweenInfoToUse = TweenInfo.new(dist/speed, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut, 0, false, 0)
             
             local TweenValue = Instance.new("CFrameValue")
             TweenValue.Value = car:GetPrimaryPartCFrame()
                     
             TweenValue.Changed:Connect(function()
             car:PivotTo(TweenValue.Value)
             end)
             local OnTween = TweenService:Create(TweenValue, TweenInfoToUse, {Value= CFrame.new(location)})
             OnTween:Play()
             OnTween.Completed:Wait()
       end
       end
       until game:GetService("Players").LocalPlayer.PlayerGui.Score.Frame.Race.Visible == false or getfenv().xprace == false or test == nil
       carp.Velocity = Vector3.new(0,0,0)
    end
end)

tab2:Toggle("AutoFarm [Race XP]",function(state)
    getfenv().urace = (state and true or false)
    spawn(function()
       while getfenv().urace do
       task.wait()
       if game:GetService("Players").LocalPlayer.PlayerGui.Score.Frame.Race.Visible == true and getfenv().lookat ~= nil then
       local speed = getfenv().speed or 250
       
       local plr = game.Players.LocalPlayer
       local chr = plr.Character
       local car = chr.Humanoid.SeatPart.Parent.Parent
       local carp = car.PrimaryPart
       carp.Velocity = getfenv().lookat.CFrame.LookVector*speed
       end
       end
          end)
    while getfenv().urace do
       wait()
   if game:GetService("Players").LocalPlayer.PlayerGui.Score.Frame.Race.Visible == true then
    wait()
    local plr = game.Players.LocalPlayer
    local chr = plr.Character
    local car = chr.Humanoid.SeatPart.Parent.Parent
    local carp = car.PrimaryPart
    repeat task.wait()
       local test = nil
    for i,v in pairs(workspace.Races:GetDescendants()) do
       if v.ClassName == "Model"  and v:FindFirstChild("Forcefield") and v:FindFirstChild("Forcefield").Transparency ~= 1  then
          getfenv().lookat = v:FindFirstChild("Forcefield")
          local speed = getfenv().speed or 250
          local plr = game.Players.LocalPlayer
          local chr = plr.Character
          local car = chr.Humanoid.SeatPart.Parent.Parent
          local carp = car.PrimaryPart
          local location = v:FindFirstChild("Forcefield").Position
          local dist = (carp.Position-location).magnitude
          print(dist/speed)
          local TweenService = game:GetService("TweenService")
          local TweenInfoToUse = TweenInfo.new(dist/speed, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut, 0, false, 0)
 
          local TweenValue = Instance.new("CFrameValue")
          TweenValue.Value = car:GetPrimaryPartCFrame()
          TweenValue.Changed:Connect(function()
          car:PivotTo(TweenValue.Value)
          end)
          local OnTween = TweenService:Create(TweenValue, TweenInfoToUse, {Value= CFrame.new(location)})
          OnTween:Play()
          OnTween.Completed:Wait()
    end
    end
    until game:GetService("Players").LocalPlayer.PlayerGui.Score.Frame.Race.Visible == false or getfenv().urace == false or test == nil
    carp.Velocity = Vector3.new(0,0,0)
 end
    end
end)

tab3:Button("Made By sdiss/Raptor",function()
    print("Follow!")    
end)

tab3:Button("https://discord.gg/CC4Ttv99eX",function()
    print("Follow!")    
end)
